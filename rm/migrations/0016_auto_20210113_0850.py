# Generated by Django 3.1.5 on 2021-01-13 08:50
import os

from django.db import migrations
from typing import List

from rm.models import InterfaceCall


def add_groups_with_permissions(apps, schema_editor):
    """
    Add the groups 'Cluster Lead' and 'Buyer' with the permissions currently available
    """
    Group = apps.get_model('auth.Group')
    Permission = apps.get_model('auth.Permission')
    ContentType = apps.get_model("contenttypes", "ContentType")
    Contract = apps.get_model("rm", "Contract")

    content_type_contract = ContentType.objects.get_for_model(Contract)
    content_type_interfaceCall = ContentType.objects.get_for_model(InterfaceCall)

    permission_view_contract = dict(codename="view_contract",
                                    name="Can view contract",
                                    content_type=content_type_contract)
    permission_upload_contract_file = dict(codename="upload_contract_file",
                                           name="Can upload contract files",
                                           content_type=content_type_interfaceCall)
    permission_call_contract_interface = dict(codename="call_contract_interface",
                                              name="Can call (negometrix) contract interface",
                                              content_type=content_type_interfaceCall)
    print()  # for layout purposes
    create_group_with_permissions(Group, Permission, "Cluster Lead", [permission_view_contract])
    create_group_with_permissions(Group, Permission, "Buyer", [permission_view_contract,
                                                               permission_upload_contract_file,
                                                               permission_call_contract_interface])


def create_group_with_permissions(Group, Permission, group_name, permissions: List[dict]):
    new_group, created = Group.objects.get_or_create(name=group_name)

    for permission in permissions:
        perm, created = Permission.objects.get_or_create(codename=permission['codename'],
                                                         defaults=dict(name=permission['name'],
                                                                       content_type=permission['content_type']))
        if created:
            print(
                f"  - {os.path.basename(__file__)}: created permission: {permission['codename']}, "
                f"adding it to {group_name}")
        else:
            print(
                f"  - {os.path.basename(__file__)}: found permission: {permission['codename']}, "
                f"adding it to {group_name}")
        new_group.permissions.add(perm)


class Migration(migrations.Migration):
    dependencies = [
        ('rm', '0015_auto_20210112_1409'),
    ]

    operations = [
        migrations.RunPython(add_groups_with_permissions),
    ]
