# Generated by Django 3.1.5 on 2021-02-15 09:48
from typing import List

from coverage.annotate import os
from django.db import migrations


def add_contract_permissions_to_cluster_lead(apps, schema_editor):
    Group = apps.get_model('auth.Group')
    Permission = apps.get_model('auth.Permission')
    ContentType = apps.get_model("contenttypes", "ContentType")
    InterfaceCall = apps.get_model("rm", "InterfaceCall")

    content_type_interfaceCall = ContentType.objects.get_for_model(InterfaceCall)

    permission_contracten_view = dict(codename="contracten_view",
                                      name="Contracten view",
                                      content_type=content_type_interfaceCall)

    create_group_with_permissions(Group, Permission, "Cluster Lead", [permission_contracten_view, ])


def create_group_with_permissions(Group, Permission, group_name, permissions: List[dict]):
    new_group, created = Group.objects.get_or_create(name=group_name)

    for permission in permissions:
        perm, created = Permission.objects.get_or_create(codename=permission['codename'],
                                                         defaults=dict(name=permission['name'],
                                                                       content_type=permission['content_type']))
        if created:
            print(
                f"  - {os.path.basename(__file__)}: created permission: {permission['codename']}, "
                f"adding it to {group_name}")
        else:
            print(
                f"  - {os.path.basename(__file__)}: found permission: {permission['codename']}, "
                f"adding it to {group_name}")
        new_group.permissions.add(perm)

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0012_nego_statics_and_perm'),
    ]

    operations = [
        migrations.RunPython(add_contract_permissions_to_cluster_lead),
    ]
